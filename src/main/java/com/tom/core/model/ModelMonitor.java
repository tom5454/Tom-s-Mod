// Date: 2015.12.17. 18:14:58
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX
package com.tom.core.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.entity.Entity;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.util.ResourceLocation;

import com.tom.lib.Configs;
import com.tom.model.IBaseModel;

import com.tom.core.tileentity.TileEntityMonitorBase;

public class ModelMonitor extends ModelBase implements IBaseModel
{
	//fields
	ModelRenderer Shape1;
	ModelRenderer Shape2;
	ModelRenderer Shape3;
	ModelRenderer Shape4;
	ModelRenderer Shape5;
	ModelRenderer Shape6;

	public ModelMonitor()
	{
		textureWidth = 64;
		textureHeight = 64;

		Shape1 = new ModelRenderer(this, 0, 0);
		Shape1.addBox(0F, 0F, 0F, 16, 16, 16);
		Shape1.setRotationPoint(-8F, 8F, -8F);
		Shape1.setTextureSize(64, 64);
		Shape1.mirror = true;
		setRotation(Shape1, 0F, 0F, 0F);
		Shape2 = new ModelRenderer(this, 0, 32);
		Shape2.addBox(0F, 0F, 0F, 16, 16, 5);
		Shape2.setRotationPoint(-8F, 8F, -8F);
		Shape2.setTextureSize(64, 64);
		Shape2.mirror = true;
		setRotation(Shape2, 0F, 0F, 0F);
		Shape3 = new ModelRenderer(this, 16, 0);
		Shape3.addBox(0F, 0F, 0F, 16, 16, 0);
		Shape3.setRotationPoint(-8F, 8F, -8F);
		Shape3.setTextureSize(64, 64);
		Shape3.mirror = true;
		setRotation(Shape3, 0F, 0F, 0F);
		Shape4 = new ModelRenderer(this, 16, 0);
		Shape4.addBox(0F, 0F, 0F, 0, 16, 16);
		Shape4.setRotationPoint(-8F, 8F, -8F);
		Shape4.setTextureSize(64, 64);
		Shape4.mirror = true;
		setRotation(Shape4, 0F, 0F, 0F);
		Shape5 = new ModelRenderer(this, 50, 16);
		Shape5.addBox(0F, 0F, 0F, 7, 16, 0);
		Shape5.setRotationPoint(8F, 8F, -8F);
		Shape5.setTextureSize(64, 64);
		Shape5.mirror = true;
		setRotation(Shape5, 0F, -2.356194F, 0F);
		Shape6 = new ModelRenderer(this, 27, 37);
		Shape6.addBox(0F, 0F, 0F, 18, 16, 0);
		Shape6.setRotationPoint(-8F, 8F, 8F);
		Shape6.setTextureSize(64, 64);
		Shape6.mirror = true;
		setRotation(Shape6, 0F, 0.7853982F, 0F);
	}

	@Override
	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
	{
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5,entity);
		Shape1.render(f5);
		Shape2.render(f5);
		Shape3.render(f5);
		Shape4.render(f5);
		Shape5.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z)
	{
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	@Override
	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5,Entity ent)
	{
		super.setRotationAngles(f, f1, f2, f3, f4, f5,ent);
	}

	@Override
	public void renderStatic(float size, TileEntity te) {
		if(te != null && te instanceof TileEntityMonitorBase){
			TileEntityMonitorBase tile = (TileEntityMonitorBase) te;
			if(tile.renderer != null){
				GlStateManager.callList(tile.renderer);
			}
		}
	}

	@Override
	public void renderDynamic(float size, TileEntity te, float partialTicks) {

	}

	@Override
	public ResourceLocation getModelTexture(TileEntity tile) {
		return Configs.monitor;
	}

	@Override
	public boolean rotateModelBasedOnBlockMeta() {
		return true;
	}

}
